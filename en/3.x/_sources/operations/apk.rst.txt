Apk Operations
--------------


Manage apk packages.


Facts used in these operations: :ref:`facts:apk.ApkPackages`.

.. _operations:apk.packages:

:code:`apk.packages`
~~~~~~~~~~~~~~~~~~~~

Add/remove/update apk packages.

.. code:: python

    apk.packages(
        packages: str | list[str] | None=None, present=True, latest=False, update=False,
        upgrade=False, **kwargs,
    )

+ **packages**: list of packages to ensure
+ **present**: whether the packages should be installed
+ **latest**: whether to upgrade packages without a specified version
+ **update**: run ``apk update`` before installing packages
+ **upgrade**: run ``apk upgrade`` before installing packages

Versions:
    Package versions can be pinned like apk: ``<pkg>=<version>``.

**Examples:**

.. code:: python

    # Update package list and install packages
    apk.packages(
        name="Install Asterisk and Vim",
        packages=["asterisk", "vim"],
        update=True,
    )

    # Install the latest versions of packages (always check)
    apk.packages(
        name="Install latest Vim",
        packages=["vim"],
        latest=True,
    )
Note:
	This operation also inherits all :doc:`global arguments </arguments>`.


.. _operations:apk.update:

:code:`apk.update`
~~~~~~~~~~~~~~~~~~

.. admonition:: Stateless operation
    :class: important

    This operation will always execute commands and is not idempotent.


Updates apk repositories.

.. code:: python

    apk.update(**kwargs)
Note:
	This operation also inherits all :doc:`global arguments </arguments>`.


.. _operations:apk.upgrade:

:code:`apk.upgrade`
~~~~~~~~~~~~~~~~~~~

.. admonition:: Stateless operation
    :class: important

    This operation will always execute commands and is not idempotent.


Upgrades all apk packages.

.. code:: python

    apk.upgrade(available: bool=False, **kwargs)

+ **available**: force all packages to be upgraded (recommended on whole Alpine version upgrades)
Note:
	This operation also inherits all :doc:`global arguments </arguments>`.

