Selinux Facts
-------------

.. _facts:selinux.FileContext:

:code:`selinux.FileContext`
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: python

    host.get_fact(FileContext, path)

rns structured SELinux file context data for a specified file
`None`` if the file does not exist.

ode:: python

{
    "user": "system_u",
    "role": "object_r",
    "type": "default_t",
    "level": "s0",
}


.. _facts:selinux.FileContextMapping:

:code:`selinux.FileContextMapping`
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: python

    host.get_fact(FileContextMapping, target)

rns structured SELinux file context data for the specified target path prefix
g the same format as :ref:`facts:selinux.FileContext`.
here is no mapping, it returns ``{}``
: This fact requires root privileges.


.. _facts:selinux.SEBoolean:

:code:`selinux.SEBoolean`
~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: python

    host.get_fact(SEBoolean, boolean)

rns the status of a SELinux Boolean as a string (``on`` or ``off``).
`boolean`` does not exist, ``SEBoolean`` returns the empty string.


.. _facts:selinux.SEPort:

:code:`selinux.SEPort`
~~~~~~~~~~~~~~~~~~~~~~

.. code:: python

    host.get_fact(SEPort, protocol, port)

rns the SELinux 'type' for the specified protocol ``(tcp|udp|dccp|sctp)`` and port number.
o type has been set, ``SEPort`` returns the empty string.
: ``policycoreutils-dev`` must be installed for this to work.


.. _facts:selinux.SEPorts:

:code:`selinux.SEPorts`
~~~~~~~~~~~~~~~~~~~~~~~

.. code:: python

    host.get_fact(SEPorts, )

rns the SELinux 'type' definitions for ``(tcp|udp|dccp|sctp)`` ports.
: This fact requires root privileges.

ode:: python

{
    "tcp": { 22: "ssh_port_t", ...},
    "udp": { ...}
}

